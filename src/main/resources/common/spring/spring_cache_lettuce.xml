<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- POOL配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}"/>
        <property name="minIdle" value="${redis.pool.minIdle}"/>
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
        <property name="maxWaitMillis" value="${redis.pool.maxWait}"/>
        <property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
        <property name="testWhileIdle" value="${redis.pool.testWhileIdle}"/>
        <property name="blockWhenExhausted" value="true"/>
        <property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}"/>
        <property name="numTestsPerEvictionRun" value="-1"/>
        <property name="minEvictableIdleTimeMillis" value="60000"/>
    </bean>

    <!-- 执行lua 必须使用 LettuceConnectionFactory -->
    <bean id="jedisConnectionFactory"
          class="org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory">
        <constructor-arg ref="clusterConfig"/>
    </bean>
    <bean id="redisProperties"
          class="org.springframework.core.io.support.ResourcePropertySource">
        <constructor-arg value="classpath:redis.properties"/>
    </bean>
    <bean id="clusterConfig"
          class="org.springframework.data.redis.connection.RedisClusterConfiguration">
        <constructor-arg ref="redisProperties"/>
    </bean>

    <!-- 配置RedisTemplate -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory"/>
    </bean>
</beans>
